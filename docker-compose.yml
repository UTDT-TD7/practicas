version: "3"

services:
  kafka:
    image: docker.io/bitnami/kafka:3.5
    ports:
      - 9092:9092
      - 9093:9093
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    networks:
      kafka:
        ipv4_address: 172.25.0.2
  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - 8080:8080
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=172.25.0.2:9092,172.25.0.2:9093
    networks:
      kafka:
        ipv4_address: 172.25.0.3
  eventsim:
    build:
      context: .
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    networks:
      kafka:
        ipv4_address: 172.25.0.4
    depends_on:
      - kafka
networks:
  kafka:
    ipam:
      driver: default
      config:
        - subnet: "172.25.0.0/24"
volumes:
  kafka_data:
    driver: local
